{"version":3,"sources":["components/LoadingScreen/index.js","components/Navbar/index.js","routes/PrivateRoute.js","routes/index.js","App.js","reportWebVitals.js","index.js","assets/logo.png"],"names":["LoadingScreen","props","loadingMsg","className","src","logo","alt","Navbar","useAuth0","isAuthenticated","logout","onClick","PrivateRoute","Component","component","rest","isLoading","exact","render","to","LandingPage","React","lazy","HomePage","WeatherPage","Routes","Suspense","fallback","path","App","domain","process","clientId","redirectUri","window","location","origin","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"2HAAA,uBAaeA,IAVO,SAACC,GACrB,IAAQC,EAAeD,EAAfC,WACR,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAKC,IAAMC,IAAI,SACpB,4BAAIJ,S,kKCgBKK,EApBA,WACb,MAAoCC,cAA5BC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,OAEzB,OACE,qBAAKP,UAAU,SAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKC,IAAKC,IAAMC,IAAI,SACpB,oDAEDG,GACC,wBAAQN,UAAU,yBAAyBQ,QAAS,kBAAMD,KAA1D,2B,+BCYKE,EAtBM,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAC1D,EAAuCP,cAA/BQ,EAAR,EAAQA,UAAWP,EAAnB,EAAmBA,gBAEnB,OACE,cAAC,IAAD,yBACEQ,OAAK,GACDF,GAFN,IAGEG,OAAQ,SAACjB,GACP,OAAIe,EACK,cAAChB,EAAA,EAAD,CAAeE,WAAW,6BAGX,IAApBO,EACK,cAACI,EAAD,eAAeZ,IAEf,cAAC,IAAD,CAAUkB,GAAG,WChBxBC,EAAcC,IAAMC,MAAK,kBAAM,gCAC/BC,EAAWF,IAAMC,MAAK,kBAAM,gCAC5BE,EAAcH,IAAMC,MAAK,kBAAM,sDActBG,EAZA,WACb,OACE,cAAC,IAAD,UACE,eAAC,IAAMC,SAAP,CAAgBC,SAAU,6DAA1B,UACE,cAAC,IAAD,CAAOV,OAAK,EAACW,KAAK,IAAId,UAAWM,IACjC,cAAC,EAAD,CAAcH,OAAK,EAACW,KAAK,QAAQd,UAAWS,IAC5C,cAAC,EAAD,CAAcN,OAAK,EAACW,KAAK,iBAAiBd,UAAWU,UCa9CK,EAjBH,WACV,OACE,cAAC,IAAD,CACEC,OANSC,4BAOTC,SANWD,mCAOXE,YAAaC,OAAOC,SAASC,OAH/B,SAKE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,EAAD,YCRKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS7B,OACP,cAAC,IAAM8B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,+BChBe,QAA0B,mC","file":"static/js/main.63aa15ab.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../../assets/logo.png';\n\nconst LoadingScreen = (props) => {\n  const { loadingMsg } = props;\n  return (\n    <div className='loading-screen'>\n      <img src={logo} alt='logo' />\n      <p>{loadingMsg}</p>\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n","import React from 'react';\nimport logo from '../../assets/logo.png';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst Navbar = () => {\n  const { isAuthenticated, logout } = useAuth0();\n\n  return (\n    <nav className='navbar'>\n      <div className='navbar-container'>\n        <div className='logo-container'>\n          <img src={logo} alt='logo' />\n          <p>Weather Forecast</p>\n        </div>\n        {isAuthenticated && (\n          <button className='navbar-btn btn-default' onClick={() => logout()}>\n            Log Out\n          </button>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport LoadingScreen from '../components/LoadingScreen';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { isLoading, isAuthenticated } = useAuth0();\n\n  return (\n    <Route\n      exact\n      {...rest}\n      render={(props) => {\n        if (isLoading) {\n          return <LoadingScreen loadingMsg='Loading, please wait...' />;\n        }\n\n        if (isAuthenticated === true) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to='/' />;\n        }\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\n\nconst LandingPage = React.lazy(() => import('../pages/LandingPage'));\nconst HomePage = React.lazy(() => import('../pages/HomePage'));\nconst WeatherPage = React.lazy(() => import('../pages/WeatherPage'));\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <React.Suspense fallback={<p>Loading page, please wait...</p>}>\n        <Route exact path='/' component={LandingPage} />\n        <PrivateRoute exact path='/home' component={HomePage} />\n        <PrivateRoute exact path='/weather/:city' component={WeatherPage} />\n      </React.Suspense>\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Routes from './routes';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nconst App = () => {\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n    >\n      <React.Fragment>\n        <Navbar />\n        <BrowserRouter>\n          <Routes />\n        </BrowserRouter>\n      </React.Fragment>\n    </Auth0Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/logo.a940500e.png\";"],"sourceRoot":""}